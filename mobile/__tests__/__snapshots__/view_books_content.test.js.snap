// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`check the view books screen content matches with the snapshot 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      {
        "flexDirection": "row",
        "flexWrap": "wrap",
        "marginTop": 10,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {},
          ]
        }
      >
        <Text
          style={
            [
              {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Search
        </Text>
      </View>
    </View>
    <TextInput
      defaultValue=""
      onChangeText={[Function]}
      placeholder="Search Books"
      style={
        {
          "borderWidth": 2,
          "height": 35,
          "paddingHorizontal": 10,
          "width": 200,
        }
      }
    />
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
        "marginTop": "5%",
      }
    }
  >
    <View
      style={
        {
          "borderBottomWidth": 2,
          "borderLeftWidth": 2,
          "borderRightWidth": 2,
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "black",
            "padding": 5,
            "width": 95,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
              "textAlign": "center",
            }
          }
        >
          Title
        </Text>
      </View>
      <View
        style={
          {
            "backgroundColor": "black",
            "padding": 5,
            "width": 95,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
              "textAlign": "center",
            }
          }
        >
          Author Name
        </Text>
      </View>
      <View
        style={
          {
            "backgroundColor": "black",
            "padding": 5,
            "width": 95,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
              "textAlign": "center",
            }
          }
        >
          First Publish Year
        </Text>
      </View>
      <View
        style={
          {
            "backgroundColor": "black",
            "padding": 5,
            "width": 95,
          }
        }
      >
        <Text
          style={
            {
              "color": "white",
              "textAlign": "center",
            }
          }
        >
          Number of Pages Median
        </Text>
      </View>
    </View>
    <RCTScrollView
      data={[]}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={[]}
      viewabilityConfigCallbackPairs={[]}
    >
      <View />
    </RCTScrollView>
  </View>
</View>
`;
